APP_NAME=Laravel
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_URL=http://127.0.0.1:8000

LOG_CHANNEL=stack
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=ponto
DB_USERNAME=admin
DB_PASSWORD=admin

BROADCAST_DRIVER=log
CACHE_DRIVER=file
FILESYSTEM_DRIVER=local
QUEUE_CONNECTION=sync
SESSION_DRIVER=file
SESSION_LIFETIME=120

MEMCACHED_HOST=127.0.0.1

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=smtp
MAIL_HOST=mailhog
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS=null
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_APP_CLUSTER=mt1

MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

# LARAVEL-USP-THEME
# https://github.com/uspdev/laravel-usp-theme

# O laravel-usp-theme permite que seja criado links
# para outras aplicações da unidade
# USP_THEME_SISTEMAS_2='{"text":"LDAP","url":"http://localhost/ldap"}'

# Escolha o skin a ser utilizado
USP_THEME_SKIN=uspdev

# Forçar o uso de https ##########
FORCAR_HTTPS=0

# SENHAUNICA-SOCIALITE ######################################
# https://github.com/uspdev/senhaunica-socialite
SENHAUNICA_KEY=fflch_sti
SENHAUNICA_SECRET=sua_super_chave_segura
SENHAUNICA_CALLBACK_ID=85

# URL do servidor oauth no ambiente de dev (default: no)
# SENHAUNICA_DEV="https://dev.uspdigital.usp.br/wsusuario/oauth"

# URL do servidor oauth para uso com senhaunica-faker
# SENHAUNICA_DEV="http://127.0.0.1:3141/wsusuario/oauth"

# Esses usuários terão privilégios especiais
# SENHAUNICA_ADMINS=11111,22222,33333
# SENHAUNICA_GERENTES=4444,5555,6666

# Se os logins forem limitados a usuários cadastrados (onlyLocalUsers=true),
# pode ser útil cadastrá-los aqui.
# SENHAUNICA_USERS=777,888

# Se true, os privilégios especiais serão revogados ao remover da lista (default: false)
# SENHAUNICA_DROP_PERMISSIONS=true

# Habilite para salvar o retorno em storage/app/debug/oauth/ (default: false)
# SENHAUNICA_DEBUG=true

# Replicado (https://github.com/uspdev/replicado) ########
# Se USAR_REPLICADO=true, forneças as credenciais
REPLICADO_HOST=
REPLICADO_PORT=
REPLICADO_DATABASE=
REPLICADO_USERNAME=
REPLICADO_PASSWORD=
REPLICADO_CODUNDCLG=

# Em geral é somente para sybase mas dependendo da configuração do
# MSSQL também pode precisar disso. Implica na conversão de UTF e no trimRecursivo
REPLICADO_SYBASE=1

# Veja configuração em (https://github.com/uspdev/cache) pois precisa do memcached
# Em ambiente de testes é legal não usar cache
REPLICADO_USAR_CACHE=0

# Arquivo onde o replicado vai gravar os logs
REPLICADO_PATHLOG="../storage/logs/replicado.log"

# WSFOTO
# https://github.com/uspdev/wsfoto
WSFOTO_USER=
WSFOTO_PASS=

# Se necessário desative a funcionalidade do wsfoto (foto fake apenas).
# WSFOTO_DISABLE=0

# Caso a biblioteca retorne sempre a foto fake, pode estar tendo
# algum problema na biblioteca. Ative o debug para ver os erros.
# WSFOTO_DEBUG=0

# Caminho para o arquivo de imagem desejada para ser utilizada
# como a foto fake
# WS_FOTO_FAKE_PATH=

# Pasta para salvar as fotos de Registro
# Ex. /storage/app/pictures ou vazio para /storage/app (padrão)
PATH_PICTURES=''

# Mostra foto do monitor que está na sala
FOTO_MONITOR=0